package gui;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;


public class GestionDeConexion extends javax.swing.JDialog {

    Aplicacion parent;

    /**
     * Creates new form GestionDeConexion
     */
    public GestionDeConexion(java.awt.Frame parent, boolean modal) throws UnsupportedLookAndFeelException {
        super(parent, modal);
        initComponents();
        this.parent = (Aplicacion) parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        campoRuta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        campoUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        campoContrasena = new javax.swing.JPasswordField();
        botonConfirmar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        campoNombreBD = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Conexión a base de datos");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Ruta del servidor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(25, 25, 5, 25);
        getContentPane().add(jLabel1, gridBagConstraints);

        campoRuta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoRuta.setText("localhost:3306/");
        campoRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoRutaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        getContentPane().add(campoRuta, gridBagConstraints);

        jLabel2.setText("Usuario:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(15, 25, 5, 25);
        getContentPane().add(jLabel2, gridBagConstraints);

        campoUsuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoUsuario.setText("root");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        getContentPane().add(campoUsuario, gridBagConstraints);

        jLabel3.setText("Contraseña:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(15, 25, 5, 25);
        getContentPane().add(jLabel3, gridBagConstraints);

        campoContrasena.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        getContentPane().add(campoContrasena, gridBagConstraints);

        botonConfirmar.setText("Confirmar datos");
        botonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConfirmarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(15, 25, 25, 25);
        getContentPane().add(botonConfirmar, gridBagConstraints);

        jLabel4.setText("Nombre de la base de datos:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(15, 25, 5, 25);
        getContentPane().add(jLabel4, gridBagConstraints);

        campoNombreBD.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoNombreBD.setText("karaoke");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 25, 5, 25);
        getContentPane().add(campoNombreBD, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConfirmarActionPerformed

        //envia los datos de la conexion a la logica de conexion
        logica.LogicaConexion.setRuta(campoRuta.getText());
        logica.LogicaConexion.setUsuario(campoUsuario.getText());
        logica.LogicaConexion.setContrasena(campoContrasena.getText());
        logica.LogicaConexion.setNombreBD(campoNombreBD.getText());

        //si conectamos, mostramos la aplicación, si no, mensaje de error
        try {
            if (logica.LogicaConexion.conectar()) {
                this.setVisible(false);
                
                //si no existen registros en la base de datos, se pregunta para crearlos
                if (logica.LogicaConexion.getCancionController().getCancionCount() == 0 
                        && logica.LogicaConexion.getUsuarioController().getUsuarioCount() == 0 
                        && logica.LogicaConexion.getKaraokeController().getKaraokeCount() == 0) {
                    
                    Object[] opciones = {"Sí", "No", "Cancelar"};
                    if (JOptionPane.showOptionDialog(null, 
                            "¿Desea añadir datos de prueba de los últimos 7 días a la aplicación?", 
                            "Añadir datos de prueba", JOptionPane.YES_NO_OPTION, 
                            JOptionPane.QUESTION_MESSAGE, null, opciones, 
                            opciones[0]) == 0) {
                        if (logica.LogicaDatosDePrueba.annadirDatos(this)) {
                            JOptionPane.showMessageDialog(this, "Datos añadidos correctamente.");
                        } else {
                            JOptionPane.showMessageDialog(this, "No se pudieron añadir los datos.");
                        }
                    }
                }
                logica.logicaDatos.iniciarTablas(parent);
                logica.logicaDatos.actualizarDatos();
                parent.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Los datos para la conexión no son correctos o la base de datos no se encuentra operativa.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(GestionDeConexion.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_botonConfirmarActionPerformed

    private void campoRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoRutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoRutaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    GestionDeConexion dialog = new GestionDeConexion(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(GestionDeConexion.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonConfirmar;
    private javax.swing.JPasswordField campoContrasena;
    private javax.swing.JTextField campoNombreBD;
    private javax.swing.JTextField campoRuta;
    private javax.swing.JTextField campoUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
